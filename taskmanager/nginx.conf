# Nginx configuration for Render deployment

upstream taskmanager_asgi {
    server taskmanager:8000;  # Use the service name `taskmanager` which is defined in docker-compose.yml
}

server {
    listen 80;
    server_name taskmanager-wfqi.onrender.com;  # Your Render domain

    # WebSocket configuration for /ws/
    location /ws/ {
        proxy_pass http://taskmanager_asgi;
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection "upgrade";
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_read_timeout 3600;
        proxy_send_timeout 3600;
        proxy_cache_bypass $http_upgrade;  # Prevent WebSocket caching
    }

    # Proxy requests to Django backend
    location /api/ {
        proxy_pass http://taskmanager_asgi;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
    }

    # Serve static files with cache headers
    location /static/ {
        root /var/www/frontend/dist;
        expires 30d;
        add_header Cache-Control "public";
    }

    # Serve frontend app and handle client-side routing
    location / {
        root /var/www/frontend/dist;
        try_files $uri $uri/ /index.html;  # SPA routing for frontend
    }

    # Security headers (optional but recommended)
    add_header X-Frame-Options SAMEORIGIN;
    add_header X-XSS-Protection "1; mode=block";
    add_header X-Content-Type-Options nosniff;

    # Enable detailed logging for debugging
    error_log /var/log/nginx/error.log debug;
}
